# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from kl_site_proto import pxData_pb2 as kl__site__proto_dot_pxData__pb2


class PxDataStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.CalcAll = channel.unary_unary(
                '/KLSite.PxData/CalcAll',
                request_serializer=kl__site__proto_dot_pxData__pb2.PxCalcRequestMulti.SerializeToString,
                response_deserializer=kl__site__proto_dot_pxData__pb2.PxCalcReply.FromString,
                )
        self.CalcPartial = channel.unary_unary(
                '/KLSite.PxData/CalcPartial',
                request_serializer=kl__site__proto_dot_pxData__pb2.PxCalcRequestMulti.SerializeToString,
                response_deserializer=kl__site__proto_dot_pxData__pb2.PxCalcReply.FromString,
                )
        self.CalcLast = channel.unary_unary(
                '/KLSite.PxData/CalcLast',
                request_serializer=kl__site__proto_dot_pxData__pb2.PxCalcRequestSingle.SerializeToString,
                response_deserializer=kl__site__proto_dot_pxData__pb2.PxCalcReply.FromString,
                )


class PxDataServicer(object):
    """Missing associated documentation comment in .proto file."""

    def CalcAll(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CalcPartial(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CalcLast(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_PxDataServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'CalcAll': grpc.unary_unary_rpc_method_handler(
                    servicer.CalcAll,
                    request_deserializer=kl__site__proto_dot_pxData__pb2.PxCalcRequestMulti.FromString,
                    response_serializer=kl__site__proto_dot_pxData__pb2.PxCalcReply.SerializeToString,
            ),
            'CalcPartial': grpc.unary_unary_rpc_method_handler(
                    servicer.CalcPartial,
                    request_deserializer=kl__site__proto_dot_pxData__pb2.PxCalcRequestMulti.FromString,
                    response_serializer=kl__site__proto_dot_pxData__pb2.PxCalcReply.SerializeToString,
            ),
            'CalcLast': grpc.unary_unary_rpc_method_handler(
                    servicer.CalcLast,
                    request_deserializer=kl__site__proto_dot_pxData__pb2.PxCalcRequestSingle.FromString,
                    response_serializer=kl__site__proto_dot_pxData__pb2.PxCalcReply.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'KLSite.PxData', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class PxData(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def CalcAll(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/KLSite.PxData/CalcAll',
            kl__site__proto_dot_pxData__pb2.PxCalcRequestMulti.SerializeToString,
            kl__site__proto_dot_pxData__pb2.PxCalcReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CalcPartial(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/KLSite.PxData/CalcPartial',
            kl__site__proto_dot_pxData__pb2.PxCalcRequestMulti.SerializeToString,
            kl__site__proto_dot_pxData__pb2.PxCalcReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CalcLast(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/KLSite.PxData/CalcLast',
            kl__site__proto_dot_pxData__pb2.PxCalcRequestSingle.SerializeToString,
            kl__site__proto_dot_pxData__pb2.PxCalcReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
